#!/bin/bash

# $1: host
# $2: port
# $3: compression alg: "bzip2"/"gzip"
# TODO:
# $4: service: "ssh"/"nc"
# ${@:5}: find args

if ! hash nc; then
  echo "command 'nc' not found" 1>&2
  exit -1
fi

# check for actual algs
foundAlg="false"
for alg in compressionAlgs; do
  if [ "$3" = $alg ]; then
    foundAlg="true"
  fi
done
if [ "foundAlg" = "false" ]; then
  echo "compression algorithm '$3' not found. select from:" 1>&2
  echo -e $compressionAlgs
  exit -1
fi


# utility functions
function nc_try_until_connect {
  while ! nc -c $1 $2; do
    echo -n ""
  done
}

# listen for all files by remote host and diff to get needed files
filesToTransfer="$(diff <(nc -l -p $2 | sort) \
<(find . -type f ${@:5} -print0 | tr "\0" "\n" | sort) \
--unchanged-line-format="" --old-line-format="")"

# now tell them how many files they're getting and how big they are
numFiles="$(echo $filesToTransfer | wc -w)"
echo $numFiles | nc_try_until_connect $1 $2

if [ $numFiles -ne 0 ]; then
  # now tell them how big the files are
  for file in $filesToTransfer; do
    du -b "$file" | grep -Eo "^[[:digit:]]+"
  done | nc_try_until_connect $1 $2
  # not sure why the -e is required; \n is inserted for some reason
  tar "--$3" --create --to-stdout \
      $(echo -e $filesToTransfer | sed -e 's/ /\ /g') | \
    nc_try_until_connect $1 $2
fi

echo "synced!"
